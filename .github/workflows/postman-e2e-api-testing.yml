name: WSO2 IS Postman Tests

on:
  workflow_dispatch:
  push:
    branches: [ API_Test_Suite ]
  pull_request:
    branches: [ API_Test_Suite ]

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JAVA_TOOL_OPTIONS: "-Djdk.util.zip.disableZip64ExtraFieldValidation=true -Djdk.nio.zipfs.allowDotZipEntry=true"

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Adopt JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Product-IS build with JDK 11 (Skipping All Tests)
        run: |
          mvn clean install --batch-mode -Dmaven.test.skip=true | tee mvn-build.log

      - name: Get IS zip file name
        id: get-zip
        run: |
            zip_file=$(find . -name 'wso2is-*.zip' -type f -not -name 'wso2is-*-src.zip' -print -quit)
            # Get just the filename without .zip
            dir_name=$(basename "$zip_file" .zip)
            echo "ZIP_FILE=${zip_file}" >> $GITHUB_OUTPUT
            echo "DIR_NAME=${dir_name}" >> $GITHUB_OUTPUT
        
      - name: Extract and Start WSO2 IS
        run: |
            cd modules/distribution/target/
            unzip ${{ steps.get-zip.outputs.DIR_NAME }}.zip
            cd ${{ steps.get-zip.outputs.DIR_NAME }}/bin/
            chmod +x wso2server.sh
            ./wso2server.sh start
            echo "Waiting for server to start..."
            timeout 300 bash -c 'while ! nc -z localhost 9443; do sleep 1; done'
            echo "Server started"

      # Make script excutable
      - name: Make script executable
        run: chmod +x api-testing-postman-collections/create_and_assign_api_resources.sh

      # Run the script
      - name: Run Test Script
        run: ./api-testing-postman-collections/create_and_assign_api_resources.sh 

      # Install and run Postman tests
      - name: Install Newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
      
      # Run postman collections
      - name: Run Postman Collection 01
        run: |
          newman run ./api-testing-postman-collections/collection01.json -k \
          --reporters cli,htmlextra \
          --reporter-htmlextra-export testResults/htmlreport.html
        continue-on-error: true

      - name: Run Postman Collection 02
        run: |
          newman run ./api-testing-postman-collections/collection02.json -k \
          --reporters cli,htmlextra \
          --reporter-htmlextra-export testResults/htmlreport.html
        continue-on-error: true

      # Archive test results
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            testResults/
            target/surefire-reports/
          if-no-files-found: warn

      # Stop WSO2 IS
      - name: Stop WSO2 IS
        if: always()
        run: |
          cd modules/distribution/target/${{ steps.get-zip.outputs.DIR_NAME }}/bin/
          ./wso2server.sh stop
          echo "Server stopped"